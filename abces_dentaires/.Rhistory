mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(3, 4,), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal()
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(5, 6), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(5, 4), bold = T)
mod <- glm(
data = qare, has_antibiotic ~ speciality + physician_gender + physician_age_range + cim10,
subset = (str_detect(qare$speciality, "dentist|general-practician"))
)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(5, 6), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(5), bold = T)
lab <- c(
"General practician", "Physician - Male", "Physician - age 61-100",
"CIM10 - Miscellanea", "CIM10 - Carie",""
)
mod <- glm(
data = qare, has_antibiotic ~ speciality + physician_gender + physician_age_range + cim10,
subset = (str_detect(qare$speciality, "dentist|general-practician"))
)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(5), bold = T)
lab <- c(
"General practician", "Physician - Male", "Physician - age 61-100",
"CIM10 - Miscellanea", "CIM10 - Carie"
)
mod <- glm(
data = qare, has_antibiotic ~ speciality + physician_gender + physician_age_range + cim10,
subset = (str_detect(qare$speciality, "dentist|general-practician"))
)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(5), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(4,5), bold = T)
lab <- c(
"General practician", "Physician - Male", "CIM10 - Miscellanea", "CIM10 - Carie"
)
mod <- glm(
data = qare, has_antibiotic ~ speciality + physician_gender + cim10,
subset = (str_detect(qare$speciality, "dentist|general-practician"))
)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(4,5), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(4,3), bold = T)
rbind(tab1, tab2, tab3, tab4, tab5, tab6) %>%
as.data.frame() %>%
slice(-1, -4, -6, -8, -10, -13) %>%
mutate("p-value" = pval_format(`p-value`)) %>%
`rownames<-`(c(
"Patient - age 21-60", "Patient - age 61-100",
"Patient - Male", "Physician - Male", "Physician - age 61-100",
"CIM10 - Miscellanea", "CIM10 - Carie", "General practician"
)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value"), caption = "Univariate results") %>%
kable_minimal() %>%
row_spec(c(4, 6, 7, 8), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:9)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:9, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:9, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 1:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:6, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
qare$ticked_cardio_vascular %>%
table() %>%
data.frame() %>%
mutate("%" = round(proportions(Freq) * 100, 2)) %>%
kable(col.names = c("", "n", "%"), caption = "ATCD cardiovasculaires oui/non") %>%
kable_minimal()
library(DT)
library(openxlsx)
library(tidyverse)
library(stringr)
library(knitr)
library(ggplot2)
library(ggrepel)
library(shiny)
library(kableExtra)
library(fmckage)
# rouen_doc <- read.xlsx("Extraction.xlsx", sheet = 1)
rouen_sej_pmsi <- read.xlsx("Extraction.xlsx", sheet = 2)
rouen_atb <- read.xlsx("Extraction.xlsx", sheet = 3)
rouen_codes_pmsi <- read.xlsx("Extraction.xlsx", sheet = 4)
rouen_codes_ccam <- read.xlsx("Extraction.xlsx", sheet = 5)
rouen_concepts_long <- read.xlsx("Extraction.xlsx", sheet = 6)
rouen_concepts_wide <- read.xlsx("Extraction.xlsx", sheet = 7)
dictionnaire <- read.xlsx("Extraction.xlsx", sheet = 8, rows = 31:52, cols = 1:2)
rouen_nomenclature_ccam <- read.xlsx("Extraction.xlsx", sheet = 9)
# Properly formatting to wide format
rouen_codes_pmsi <-
rouen_codes_pmsi %>%
group_by(PATID, EVTID) %>%
summarise(PMSI = str_flatten(PMSI))
# Widening
rouen_codes_pmsi <- rouen_codes_pmsi %>%
mutate(PMSI = str_split_fixed(PMSI, "\\s", n = 50)) %>%
apply(2, str_remove, "\\:.+$") %>%
data.frame()
# Pivoting back to long format to comfortably erase duplicates then back to wide format
rouen_codes_pmsi <-
pivot_longer(rouen_codes_pmsi, cols = 3:52, values_to = "pmsi") %>%
arrange(EVTID, pmsi, by_group = T) %>%
select(-name) %>% # dropping "name" column
distinct() %>% # dropping duplicates
group_by(PATID, EVTID) %>%
summarise(pmsi = str_flatten(pmsi, collapse = ",")) %>%
mutate(pmsi = str_remove(pmsi, "\\,$|^\\,"))
# Adding PMSI labels
rouen_codes_pmsi$pmsi_label <- case_when(
str_detect(rouen_codes_pmsi$pmsi, "K047") ~ "Abces periapical",
str_detect(rouen_codes_pmsi$pmsi, "K046") ~ "Abces periapical avec fistule",
str_detect(rouen_codes_pmsi$pmsi, "K052") ~ "Periodontite aigue",
str_detect(rouen_codes_pmsi$pmsi, "K053") ~ "Periodondite",
str_detect(rouen_codes_pmsi$pmsi, "K02.") ~ "Carie",
str_detect(rouen_codes_pmsi$pmsi, "K088") ~ "Autres affections precisees des dents et du parodonte",
str_detect(rouen_codes_pmsi$pmsi, "K089") ~ "Affection des dents et du parodonte, sans precision",
str_detect(rouen_codes_pmsi$pmsi, "K040|K045|K048") ~ "Maladies de la pulpe et des tissu périapicaux, autres et sans précision",
str_detect(rouen_codes_pmsi$pmsi, "K050|K056") ~ "Maladie périodontale, sans précision",
str_detect(rouen_codes_pmsi$pmsi, "K068") ~ "Affection de la gencive et de la crête alvéolaire édentée, sans précision"
)
# names to lower case
names(rouen_codes_pmsi) <- tolower(names(rouen_codes_pmsi))
# Now that DPs always precede DS, we can remove labels to make codes more readable
rouen_codes_pmsi$pmsi <- rouen_codes_pmsi$pmsi %>% str_remove_all("DS\\'|DP\\'|DD\\'")
rouen_codes_ccam <-
left_join(rouen_codes_ccam, rouen_nomenclature_ccam[c(1, 2)], by = c("CODEACTE" = "Code"))
# names to lower case
names(rouen_codes_ccam) <- tolower(names(rouen_codes_ccam))
# names to lower case
names(rouen_sej_pmsi) <- tolower(names(rouen_sej_pmsi))
# Preparing dictionary for join
names(dictionnaire) <- c("code", "label")
dictionnaire$code <- as.character(dictionnaire$code)
# Joining labels to main table
rouen <-
left_join(rouen_sej_pmsi, dictionnaire, by = c("modeent" = "code")) %>%
rename(modeent_label = label) %>%
left_join(dictionnaire, by = c("modesort" = "code")) %>%
rename(modesort_label = label)
# Replacing "retour du domicile" with "retour AU domicile")
rouen$modesort_label[which(rouen$modesort_label == "Du domicile")] <- "Au domicile"
names(rouen_codes_pmsi) <- tolower(names(rouen_codes_pmsi))
# Adding pmsi codes table
rouen <- left_join(rouen, rouen_codes_pmsi)
# Adding ccam acts table
rouen <-
left_join(rouen, rouen_codes_ccam[c("patid", "evtid", "codeacte", "texte")]) %>%
rename(acte = codeacte, acte_label = texte)
rouen <- distinct(rouen) # erasing eventual duplicates
rouen$sejdur <- as.numeric(rouen$sejdur)
unique_ids <- length(unique(rouen$patid))
unique_stays <- length(unique(rouen$evtid))
rouen$patage <- as.numeric(rouen$patage)
mean_age <- round(mean(rouen$patage, na.rm = T), 2)
female_mean_age <- round(by(rouen$patage, rouen$patsex, mean, na.rm = T)[["F"]], 2)
male_mean_age <- round(by(rouen$patage, rouen$patsex, mean, na.rm = T)[["M"]], 2)
# How many stays started with an arrival from personal home
entry_mode <- rouen %>%
select(evtid, sejum, modeent_label) %>%
filter(sejum == "URGE" & modeent_label == "Du domicile") %>%
distinct() %>%
nrow()
rouen %>%
select(patid, evtid, patage, patsex) %>%
distinct() %>%
ggplot() +
geom_histogram(aes(x = patage), binwidth = 5, color = "white", boundary = .5) +
scale_x_continuous(breaks = seq(0, 100, 5)) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
labs(
title = "Age distribution",
x = "Age",
y = "Frequency"
)
tab <- rouen %>%
select(patid, patage, patsex) %>%
distinct()
ggplot(
data = tab,
aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
title = "Patient's age distribution by sex",
fill = "Gender",
y = "Age",
x = "Count"
)
rouen %>%
count(patsex) %>%
mutate(prop = round(prop.table(n) * 100, 2)) %>%
mutate(lab.ypos = cumsum(prop) - 0.5 * prop) %>%
ggplot(aes(x = "", y = prop, fill = patsex)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0) +
geom_text(aes(y = lab.ypos, label = paste(prop, "% ", "(", n, ")", sep = "")), color = "black") +
# scale_fill_manual(values = mycols) +
theme_void() +
labs(fill = "Gender", title = "Gender representation")
rouen$pmsi <- str_replace_all(rouen$pmsi, "K040|K045|K048", "K049")
rouen$pmsi <- str_replace_all(rouen$pmsi, "K050|K056", "K056")
# Frequency table
rouen %>%
select(evtid, pmsi_label) %>%
distinct() %>%
count(pmsi_label) %>%
mutate(freq = paste(round(prop.table(n) * 100, 2), "%", sep = "")) %>%
arrange(desc(n)) %>%
kable(col.names = c("Main diagnosis", "n", "Freq")) %>%
kable_minimal()
# Horizontal histogram
rouen %>%
select(evtid, pmsi_label) %>%
distinct() %>%
count(pmsi_label) %>%
ggplot(aes(
y = factor(pmsi_label, levels = pmsi_label[order(n)]), x = n,
label = c("K047", "K046", "K068", "K089", "K088", "K02*", "K056", "K049", "K053", "K052")
)) +
geom_bar(stat = "identity") +
geom_label_repel(hjust = "left", nudge_x = 25, arrow = NULL, min.segment.length = 100) +
scale_x_continuous(breaks = seq(0, 500, 50)) +
theme(
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12)
) +
labs(
title = "Main diagnosis",
y = "",
x = "Frequency"
)
data <- rouen %>%
select(1:patsex, modeent_label, modesort_label) %>%
filter(sejdur != 0) %>%
mutate(modeent_label = str_replace(modeent_label, "Par mutation depuis une unité d'hospitalisation à domicile", "Du domicile")) %>%
distinct() %>%
arrange(evtid, desc(modesort_label))
tab <- aggregate(sejdur ~ patid + evtid + sejum + patage + patsex + modeent_label, data, sum) %>%
group_by(sejum) %>%
summarise(visits = n(), total_time = sum(sejdur), mean_time_spent = round(mean(sejdur), 2)) %>%
mutate("visits %" = round(prop.table(visits) * 100, 2), "total time %" = round(prop.table(total_time) * 100, 2)) %>%
arrange(desc(total_time))
kable(tab, caption = "<b>Entered wards\b", format = "html", col.names = c("Ward", "Visits nb", "Overall time spent", "Mean time spent", "Visits %", "Time spent %")) %>%
kable_minimal()
# Shiny table
# ui <- fluidPage(
#  titlePanel("Hospital stays"),
#
#  # Create a new row for the table.
#  DT::dataTableOutput("table")
# )
#
## Load the ggplot2 package which provides
## the 'mpg' dataset.
#
# server <- function(input, output) {
#  # Filter data based on selections
#  output$table <- DT::renderDataTable(DT::datatable({
#    data <- tab
#    data
#  }))
# }
#
# shinyApp(ui = ui, server = server)
# Creation of column "has atb"
rouen_atb$has_atb <- ifelse(is.na(rouen_atb$molecule), 0, 1)
# lowercasing variables
names(rouen_atb) <- tolower(names(rouen_atb))
total_atb_prescribed <- sum(rouen_atb$has_atb == 1, na.rm = T)
patient_with_atb <- rouen_atb %>%
filter(has_atb == 1) %>%
select(patid, has_atb) %>%
distinct() %>%
nrow()
patient_with_iv <- as.vector(na.omit(rouen_atb$patid[rouen_atb$voie == "iv"]))
patient_with_iv
length(patient_with_iv)-nrow(rouen_atb[rouen_atb$patid %in% patient_with_iv & rouen_atb$voie=="os",])
rouen_atb[rouen_atb$patid %in% patient_with_iv & rouen_atb$voie=="os",]
rouen_atb[rouen_atb$patid %in% patient_with_iv,]
nrow(rouen_atb[rouen_atb$patid %in% patient_with_iv & rouen_atb$voie=="os",])
rouen_atb[rouen_atb$patid %in% patient_with_iv & rouen_atb$voie=="os",]
rouen$patid %>% unique %>% length
rouen_atb$patid %>% unique %>% length
rouen_atb$patid %>% unique %>% length
rouen_atb$patid %>% unique %>% length
rouen_atb %>% filter(has_atb==1) %>% pull(patid) %>% unique %>% length
