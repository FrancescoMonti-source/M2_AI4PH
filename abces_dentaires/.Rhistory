slice(-3) %>%
kable(caption = "Repartition specialistes") %>%
kable_minimal()
# Chunk 13
qare %>%
count(speciality) %>%
arrange(desc(n)) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
kable(caption = "Repartition volume activité") %>%
kable_minimal()
# Chunk 14
qare %>%
count(offer) %>%
arrange(desc(n)) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
kable() %>%
kable_minimal()
# Chunk 15
qare %>%
separate_rows(c(molecule_filled, is_antibiotic, duration), sep = "\\|") %>%
select(molecule_filled, is_antibiotic, duration) %>%
mutate(molecule_filled = str_squish(molecule_filled), is_antibiotic = str_squish(is_antibiotic)) %>%
rename(Molecule = molecule_filled, Atb = is_antibiotic) %>%
filter(str_detect(Atb, "True|TRUE")) %>%
mutate(
Molecule =
str_replace(
Molecule,
"(?i).*(amoxicilline.*clavulanique|clavulanique.*amoxicilline).*", "Augmentin"
),
Molecule =
str_replace(
Molecule,
"(?i).*(metronidazole.*spiramycine|spyramicine.*metronidazole).*", "Metronidazole+Spyramicine"
),
Molecule =
str_replace(
Molecule,
"(?i).*(clindamycine).*", "Clindamycine"
),
Molecule = str_to_title(Molecule)
) %>%
count(Molecule) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
arrange(desc(n)) %>%
kable(caption = "Total prescribed antibiotics overview") %>%
kable_minimal()
qare %>%
separate_rows(c(molecule_filled, is_antibiotic, duration), sep = "\\|") %>%
select(molecule_filled, is_antibiotic, duration) %>%
mutate(molecule_filled = str_squish(molecule_filled), is_antibiotic = str_squish(is_antibiotic)) %>%
rename(Molecule = molecule_filled, Atb = is_antibiotic) %>%
filter(str_detect(Atb, "True|TRUE")) %>%
mutate(
Molecule =
str_replace(
Molecule,
"(?i).*(amoxicilline.*clavulanique|clavulanique.*amoxicilline).*", "Augmentin"
),
Molecule =
str_replace(
Molecule,
"(?i).*(metronidazole.*spiramycine|spyramicine.*metronidazole).*", "Metronidazole+Spyramicine"
),
Molecule =
str_replace(
Molecule,
"(?i).*(clindamycine).*", "Clindamycine"
),
Molecule = str_to_title(Molecule)
) %>%
count(Molecule) %>%
mutate("%" = round(n/length(unique(qare$consultation_id)) * 100, 2)) %>%
arrange(desc(n)) %>%
kable(caption = "Frequency of antibiotics prescription by consultation") %>%
kable_minimal()
# Chunk 16
str_count(qare$is_antibiotic, "TRUE|True|true") %>%
table() %>%
data.frame() %>%
mutate("%" = round(prop.table(Freq) * 100, 2)) %>%
kable(col.names = c("Antibiotics prescribed", "n", "%"), caption = "Nb of antibiotics prescribed during a consultation") %>%
kable_minimal()
# Chunk 17
table(str_detect(qare$molecule_filled, ".*fene\\b"), useNA = "ifany") %>%
data.frame() %>%
mutate("%" = round(proportions(Freq) * 100, 2)) %>%
kable(col.names = c("", "n", "%"), caption = "Has anti-inflammatory") %>%
kable_minimal()
# Chunk 18
str_detect(qare$imagery_category, "(?i)radio") %>%
table(useNA = "ifany") %>%
data.frame() %>%
mutate("%" = round(proportions(Freq) * 100, 2)) %>%
kable(col.names = c("", "n", "%"), caption = "Rx precribed?") %>%
kable_minimal()
# age des patients
# sexe des patients
# départements
# age des prats
# sexe des prats
# catégorie de pathologie (carie, abcès/périodontite ou autre)
# spécialité (med gé ou dentiste)
# durée de la TC
qare <- qare %>%
mutate(
patient_age_range = factor(patient_age_range,
labels = c(
"0-20", "0-20",
"21-60", "21-60", "21-60", "21-60",
"61-100", "61-100"
)
),
physician_age_range = factor(physician_age_range,
labels = c(
"21-60", "21-60", "21-60", "21-60",
"61-100", "61-100"
)
)
)
qare <- qare %>%
mutate(cim10 = case_when(
str_detect(cim10, "Abcès|périodontite") ~ "Abcès/périodontite",
str_detect(cim10, "Carie") ~ "Carie",
TRUE ~ "Autre"),
cim10 = relevel(factor(cim10), ref = "Autre")
)
mod1 <- glm(data = qare, has_antibiotic ~ patient_age_range)
mod2 <- glm(data = qare, has_antibiotic ~ patient_gender)
mod3 <- glm(data = qare, has_antibiotic ~ physician_gender)
mod4 <- glm(data = qare, has_antibiotic ~ physician_age_range)
mod5 <- glm(data = qare, has_antibiotic ~ cim10)
mod6 <- glm(data = qare, has_antibiotic ~ speciality,
subset = (str_detect(qare$speciality,
"dentist|general-practician")
)
)
rbind(
summary(mod1)$coefficients,
summary(mod2)$coefficients,
summary(mod3)$coefficients,
summary(mod4)$coefficients,
summary(mod5)$coefficients,
summary(mod6)$coefficients
) %>%
as.data.frame() %>%
rownames_to_column() %>%
filter(!str_detect(rowname, "ntercept")) %>%
mutate(`Pr(>|t|)` = pval_format(`Pr(>|t|)`)) %>%
kable(
col.names = c("var","Estimate", "Std error", "t-value", "P-value"),
caption = "Univariate models"
) %>%
kable_minimal() %>%
row_spec(c(4, 6, 7, 8), bold = T)
# Create a function to generate the table for each model
generate_table <- function(model) {
conf_intervals <- round(exp(confint(model)), 2)
odds_ratios <- round(exp(coef(model)), 2)
p_values <- pval_format(round(coef(summary(model))[, "Pr(>|t|)"], 5))
table_data <- cbind(conf_intervals, "OR" = odds_ratios, "p-value" = p_values)
return(table_data)
}
# Create a list to store all the tables
tables <- list()
# Generate tables for each model and store them in the list
models <- list(mod1, mod2, mod3, mod4, mod5, mod6)
for (i in 1:length(models)) {
table_data <- generate_table(models[[i]])
tables[[i]] <- table_data
}
# Combine all the tables into a single data frame
combined_table <- do.call(rbind, tables)
# Define row names for the table
row_names <- c(
"Patient - age 21-60", "Patient - age 61-100",
"Patient - Male", "Physician - Male", "Physician - age 61-100",
"CIM10 - Miscellanea", "CIM10 - Carie", "General practician"
)
# Filter and format the combined table
filtered_table <- combined_table[-c(1, 4, 6, 8, 10, 13), ]
filtered_table[["p-value"]] <- format(pval_format(filtered_table[["p-value"]]), digits = 5)
rownames(filtered_table) <- row_names
# Print the formatted table using kable
library(kableExtra)
formatted_table <- kable(filtered_table, col.names = c("2.5%", "97.5%", "OR", "p-value"), caption = "Univariate results") %>%
kable_minimal() %>%
row_spec(c(4, 6, 7, 8), bold = TRUE)
print(formatted_table)
qare$ctim10
qare$cim10
# Define row names for the table
row_names <- c(
"Patient - age 21-60", "Patient - age 61-100",
"Patient - Male", "Physician - Male", "Physician - age 61-100",
"CIM10 - Abcès/périodontite", "CIM10 - Carie", "General practician"
)
# Filter and format the combined table
filtered_table <- combined_table[-c(1, 4, 6, 8, 10, 13), ]
filtered_table[["p-value"]] <- format(pval_format(filtered_table[["p-value"]]), digits = 5)
rownames(filtered_table) <- row_names
# Print the formatted table using kable
library(kableExtra)
formatted_table <- kable(filtered_table, col.names = c("2.5%", "97.5%", "OR", "p-value"), caption = "Univariate results") %>%
kable_minimal() %>%
row_spec(c(4, 6, 7, 8), bold = TRUE)
print(formatted_table)
qare %>% filter(cim10=="Abcès/périodontite")
qare %>% filter(cim10=="Abcès/périodontite") %>% count(has_antibiotic)
rbind(
summary(mod1)$coefficients,
summary(mod2)$coefficients,
summary(mod3)$coefficients,
summary(mod4)$coefficients,
summary(mod5)$coefficients,
summary(mod6)$coefficients
) %>%
as.data.frame() %>%
rownames_to_column() %>%
filter(!str_detect(rowname, "ntercept")) %>%
mutate(`Pr(>|t|)` = pval_format(`Pr(>|t|)`)) %>%
kable(
col.names = c("var","Estimate", "Std error", "t-value", "P-value"),
caption = "Univariate models"
) %>%
kable_minimal() %>%
row_spec(c(4, 6, 7, 8), bold = T)
lab <- c(
"General practician", "Physician - Male", "CIM10 - Miscellanea", "CIM10 - Carie"
)
mod <- glm(
data = qare, has_antibiotic ~ speciality + physician_gender + cim10,
subset = (str_detect(qare$speciality, "dentist|general-practician"))
)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(4,3), bold = T)
lab <- c(
"General practician", "Physician - Male", "CIM10 - Abcès/périodontite", "CIM10 - Carie"
)
mod <- glm(
data = qare, has_antibiotic ~ speciality + physician_gender + cim10,
subset = (str_detect(qare$speciality, "dentist|general-practician"))
)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(4,3), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value")) %>%
kable_minimal() %>%
row_spec(c(3), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
data.frame() %>%
slice(-1) %>%
`rownames<-`(lab) %>%
mutate("p.value" = pval_format(p.value)) %>%
kable(col.names = c("2.5%", "97.5%", "OR", "p-value"),
caption = "Multivariate analysis") %>%
kable_minimal() %>%
row_spec(c(3), bold = T)
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs() +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(title = element_text(font="bold"))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(font="bold"))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(face="bold"))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(face="bold")) %>%
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(face="bold"))
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(face="bold")) %>%
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis", x = "OR") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(face="bold")) %>%
scale_x_continuous(breaks = seq(0, 3, 0.1))
cbind(round(exp(confint(mod)), 2),
"OR" = round(exp(coef(mod)), 2),
"p-value" = round(coef(summary(mod))[, "Pr(>|t|)"], 5)
) %>%
as.data.frame() %>%
mutate(
"p-value" = pval_format(`p-value`),
id = as.double(1:5)
) %>%
rename(
"min" = "2.5 %",
"max" = "97.5 %"
) %>%
slice(-1) %>%
ggplot(aes(y = id, x = OR)) +
geom_point() +
scale_y_continuous(name = "", breaks = 2:5, labels = lab) +
geom_errorbarh(aes(xmin = min, xmax = max), height = .1) +
labs(title = "Multivariate analysis", x = "OR") +
geom_vline(xintercept = 1, linetype = 2) +
theme_classic() +
theme(plot.title = element_text(face="bold"))+
scale_x_continuous(breaks = seq(0, 3, 0.1))
print(formatted_table)
