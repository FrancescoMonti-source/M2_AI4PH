labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")), fill = patsex)) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 5)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)+
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
g = ggplot(data = tab, aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")), fill = patsex)) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 5)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)+
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggplotly(g)
# Pie chart SEX
rouen %>%
select(patid, patsex) %>%
distinct() %>%
count(patsex) %>%
mutate(prop = round(prop.table(n) * 100, 2)) %>%
ggplot(aes(x = "", y = prop, fill = patsex)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0) +
geom_text(aes(label = paste(prop, "% ", "(", n, ")", sep = "")),
position = position_stack(vjust = 0.5),
color = "black") +
theme_void() +
labs(fill = "Gender", title = "Gender representation")
library(DT)
library(openxlsx)
library(tidyverse)
library(stringr)
library(knitr)
library(ggplot2)
library(ggrepel)
library(shiny)
library(kableExtra)
library(fmckage)
# rouen_doc <- read.xlsx("Extraction.xlsx", sheet = 1)
rouen_sej_pmsi <- read.xlsx("Extraction.xlsx", sheet = 2)
rouen_atb <- read.xlsx("Extraction.xlsx", sheet = 3)
rouen_codes_pmsi <- read.xlsx("Extraction.xlsx", sheet = 4)
rouen_codes_ccam <- read.xlsx("Extraction.xlsx", sheet = 5)
rouen_concepts_long <- read.xlsx("Extraction.xlsx", sheet = 6)
rouen_concepts_wide <- read.xlsx("Extraction.xlsx", sheet = 7)
dictionnaire <- read.xlsx("Extraction.xlsx", sheet = 8, rows = 31:52, cols = 1:2)
rouen_nomenclature_ccam <- read.xlsx("Extraction.xlsx", sheet = 9)
rouen_codes_pmsi <- rouen_codes_pmsi %>%
group_by(PATID, EVTID) %>%
summarise(PMSI = str_flatten(PMSI)) %>%
separate(PMSI, into = paste0("PMSI", 1:50), sep = "\\s", fill = "right") %>%
mutate(across(starts_with("PMSI"), ~ str_remove(., "\\:.+$"))) %>%
pivot_longer(cols = starts_with("PMSI"), values_to = "pmsi") %>%
arrange(EVTID, pmsi, .by_group = TRUE) %>%
select(-name) %>%
distinct(.keep_all = TRUE) %>%
group_by(PATID, EVTID) %>%
summarise(pmsi = str_flatten(pmsi, collapse = ",")) %>%
mutate(pmsi = str_remove(pmsi, "\\,$|^\\,")) %>%
mutate(pmsi_label = case_when(
str_detect(pmsi, "K047") ~ "Abces periapical",
str_detect(pmsi, "K046") ~ "Abces periapical avec fistule",
str_detect(pmsi, "K052") ~ "Periodontite aigue",
str_detect(pmsi, "K053") ~ "Periodondite",
str_detect(pmsi, "K02.") ~ "Carie",
str_detect(pmsi, "K088") ~ "Autres affections precisees des dents et du parodonte",
str_detect(pmsi, "K089") ~ "Affection des dents et du parodonte, sans precision",
str_detect(pmsi, "K040|K045|K048") ~ "Maladies de la pulpe et des tissu périapicaux, autres et sans précision",
str_detect(pmsi, "K050|K056") ~ "Maladie périodontale, sans précision",
str_detect(pmsi, "K068") ~ "Affection de la gencive et de la crête alvéolaire édentée, sans précision"
)) %>%
mutate_all(tolower)
# Remove labels to make codes more readable
rouen_codes_pmsi$pmsi <- str_remove_all(rouen_codes_pmsi$pmsi, "DS\\'|DP\\'|DD\\'")
rouen_codes_ccam <-
left_join(rouen_codes_ccam, rouen_nomenclature_ccam[c(1, 2)], by = c("CODEACTE" = "Code"))
# names to lower case
names(rouen_codes_ccam) <- tolower(names(rouen_codes_ccam))
# Convert column names to lowercase
colnames(rouen_sej_pmsi) <- tolower(colnames(rouen_sej_pmsi))
# Prepare dictionary for join
colnames(dictionnaire) <- c("code", "label")
dictionnaire$code <- as.character(dictionnaire$code)
# Join labels to the main table
rouen <- rouen_sej_pmsi %>%
left_join(dictionnaire, by = c("modeent" = "code")) %>%
mutate(modeent_label = label) %>%
left_join(dictionnaire, by = c("modesort" = "code")) %>%
mutate(modesort_label = label)
rouen_sej_pmsi %>%
left_join(dictionnaire, by = c("modeent" = "code"))
dictionnaire <- read.xlsx("Dictionnaire mode entree sortie.xlsx", sheet = 1)
rouen_sej_pmsi %>%
left_join(dictionnaire, by = c("modeent" = "code"))
rouen_sej_pmsi %>%
left_join(dictionnaire)
View(dictionnaire)
rouen_sej_pmsi
rouen_sej_pmsi %>%
left_join(dictionnaire[c("code","modeent_label")], by = c("modeent" = "code"))
dictionnaire$code <- as.character(dictionnaire$code)
# Join labels to the main table
rouen <- rouen_sej_pmsi %>%
left_join(dictionnaire[c("code","modeent_label")], by = c("modeent" = "code")) %>%
mutate(modeent_label = label) %>%
left_join(dictionnaire, by = c("modesort" = "code")) %>%
mutate(modesort_label = label)
rouen_sej_pmsi %>%
left_join(dictionnaire[c("code","modeent_label")], by = c("modeent" = "code"))
# Join labels to the main table
rouen <- rouen_sej_pmsi %>%
left_join(dictionnaire[c("code","modeent_label")], by = c("modeent" = "code")) %>%
left_join(dictionnaire[c("code","modesort_label")], by = c("modesort" = "code")) %>%
# Replace "retour du domicile" with "retour au domicile"
rouen$modesort_label <- case_when(
rouen$modesort_label == "Du domicile" ~ "Au domicile",
TRUE ~ rouen$modesort_label
)
rouen_sej_pmsi %>%
left_join(dictionnaire[c("code","modeent_label")], by = c("modeent" = "code")) %>%
left_join(dictionnaire[c("code","modesort_label")], by = c("modesort" = "code"))
# Convert column names to lowercase
colnames(rouen_codes_pmsi) <- tolower(colnames(rouen_codes_pmsi))
# Join pmsi codes table
rouen <- rouen %>%
left_join(rouen_codes_pmsi)
rouen
# Join labels to the main table
rouen <- rouen_sej_pmsi %>%
left_join(dictionnaire[c("code","modeent_label")], by = c("modeent" = "code")) %>%
left_join(dictionnaire[c("code","modesort_label")], by = c("modesort" = "code"))
# Replace "retour du domicile" with "retour au domicile"
rouen$modesort_label <- case_when(
rouen$modesort_label == "Du domicile" ~ "Au domicile",
TRUE ~ rouen$modesort_label
)
# Convert column names to lowercase
colnames(rouen_codes_pmsi) <- tolower(colnames(rouen_codes_pmsi))
# Join pmsi codes table
rouen <- rouen %>%
left_join(rouen_codes_pmsi)
# Join ccam acts table
rouen <- rouen %>%
left_join(select(rouen_codes_ccam, patid, evtid, codeacte, texte),
by = c("patid", "evtid")) %>%
rename(acte = codeacte, acte_label = texte)
# Remove duplicates
rouen <- distinct(rouen)
rouen <- rouen %>%
mutate(sejdur = as.numeric(sejdur))
unique_ids <- rouen %>%
pull(patid) %>%
n_distinct()
unique_stays <- rouen %>%
pull(evtid) %>%
n_distinct()
mean_age <- rouen %>%
mutate(patage = as.numeric(patage)) %>%
summarize(mean_age = round(mean(patage, na.rm = TRUE), 2)) %>%
pull(mean_age)
female_mean_age <- rouen %>%
filter(patsex == "F") %>%
summarize(female_mean_age = round(mean(as.numeric(patage), na.rm = TRUE), 2)) %>%
pull(female_mean_age)
male_mean_age <- rouen %>%
filter(patsex == "M") %>%
summarize(male_mean_age = round(mean(as.numeric(patage), na.rm = TRUE), 2)) %>%
pull(male_mean_age)
entry_mode <- rouen %>%
filter(sejum == "URGE" & modeent_label == "Du domicile") %>%
summarize(entry_mode = n()) %>%
pull(entry_mode)
library(ggplot2)
rouen %>%
select(patid, evtid, patage, patsex) %>%
distinct() %>%
ggplot(aes(x = patage)) +
geom_histogram(binwidth = 5, color = "white", boundary = 0.5) +
scale_x_continuous(breaks = seq(0, 100, 5)) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
labs(
title = "Age distribution",
x = "Age",
y = "Frequency"
)
rouen %>%
select(patid, evtid, patage, patsex) %>%
distinct() %>%
ggplot(aes(x = as.numeric(patage))) +
geom_histogram(binwidth = 5, color = "white", boundary = 0.5) +
scale_x_continuous(breaks = seq(0, 100, 5)) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
labs(
title = "Age distribution",
x = "Age",
y = "Frequency"
)
tab <- rouen %>%
select(patid, patage, patsex) %>%
distinct() %>% mutate(as.numeric(patage))
ggplot(tab, aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_col(position = "identity") +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
title = "Patient's age distribution by sex",
fill = "Gender",
y = "Age",
x = "Count"
) +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggplot(data = tab, aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex), fill = patient_gender)) +
geom_bar(data = subset(tab, tab$patient_gender == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patient_gender == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
ggplot(data = tab, aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex), fill = patsex)) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
ggplot(data = tab, aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
tab <- rouen %>%
select(patid, patage, patsex) %>%
distinct() %>% mutate(as.numeric(patage))
ggplot(data = tab, aes(x = cut(patage, breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
ggplot(data = tab, aes(x = cut(as.numeric(patage), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 50)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
ggplot(data = tab, aes(x = cut(as.numeric(patage), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 5)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
ggplot(data = tab, aes(x = cut(as.numeric(patage), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70",
"71-80", "81-90", "91-100")),
fill = factor(patsex))) +
geom_bar(data = subset(tab, tab$patsex == "F"), position = "identity") +
geom_bar(data = subset(tab, tab$patsex == "M"), aes(y = after_stat(count) * (-1))) +
scale_y_continuous(breaks = seq(-1000, 1000, 5)) +
coord_flip() +
labs(
y = "Count",
x = "Age",
fill = "Gender", title = "Patient's age distribution by sex"
)
rouen$pmsi <- str_replace_all(rouen$pmsi, "K040|K045|K048", "K049")
rouen$pmsi <- str_replace_all(rouen$pmsi, "K050|K056", "K056")
# Frequency table
rouen %>%
select(evtid, pmsi_label) %>%
distinct() %>%
count(pmsi_label) %>%
mutate(freq = paste(round(prop.table(n) * 100, 2), "%", sep = "")) %>%
arrange(desc(n)) %>%
kable(col.names = c("Main diagnosis", "n", "Freq")) %>%
kable_minimal()
# Horizontal histogram
rouen %>%
select(evtid, pmsi_label) %>%
distinct() %>%
count(pmsi_label) %>%
ggplot(aes(
y = factor(pmsi_label, levels = pmsi_label[order(n)]), x = n,
label = c("K047", "K046", "K068", "K089", "K088", "K02*", "K056", "K049", "K053", "K052")
)) +
geom_bar(stat = "identity") +
geom_label_repel(hjust = "left", nudge_x = 25, arrow = NULL, min.segment.length = 100) +
scale_x_continuous(breaks = seq(0, 500, 50)) +
theme(
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12)
) +
labs(
title = "Main diagnosis",
y = "",
x = "Frequency"
)
rouen_atb %>% select(evtid,molecule) %>% count(molecule)
rouen_atb %>% select(patid,molecule) %>% count(molecule)
rouen_atb
# lowercasing variables
names(rouen_atb) <- tolower(names(rouen_atb))
rouen_atb %>% select(patid,molecule) %>% count(molecule)
rouen_atb %>% select(patid,molecule) %>% group_by(patid) %>% count(molecule)
rouen_atb %>% select(patid,molecule) %>% group_by(patid) %>% count(molecule) %>% arrange(desc(n))
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% count(molecule) %>% arrange(desc(n))
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% count(molecule) %>% arrange(desc(n)) %$% table(.n)
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% count(molecule) %>% arrange(desc(n)) %$% table(n)
library(magrittr)
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% count(molecule) %>% arrange(desc(n)) %$% table(n)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% count(molecule) %>% arrange(desc(n)) %$% table(n)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% count(voie) %>% arrange(desc(n)) %$% table(n)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie))
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% count(voie)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% count(voie) %>% arrange(desc(n))
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% count(voie) %>% arrange(desc(n)) %>% print(n=20)
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule))
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% count(molecule)
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n(molecule))
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n())
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n=n()) %>% arrange(desc(n))
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n=n()) %>% arrange(desc(n)) %>% print(n=20)
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n=n()) %>% arrange(desc(n)) %>% print(n=30)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% summarise(n=n()) %>% arrange(desc(n)) %>% print(n=30)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% group_by(patid) %>% count(voie)
rouen_atb %>% select(patid,voie) %>% filter(!is.na(voie)) %>% count(voie)
s.vector(na.omit(rouen_atb$patid[rouen_atb$voie == "iv"]))
as.vector(na.omit(rouen_atb$patid[rouen_atb$voie == "iv"]))
# Patient qui ont recu IV
patient_with_iv <- as.vector(na.omit(rouen_atb$patid[rouen_atb$voie == "iv"]))
rouen_atb %>% filter(patid %in% patient_with_iv)
rouen_atb %>% filter(patid %in% patient_with_iv) %>% filter(voie=="os")
rouen_atb %>% filter(patid %in% patient_with_iv) %>% filter(voie=="os") %>% n_distinct(patid)
rouen_atb %>% filter(patid %in% patient_with_iv) %>% filter(voie=="os") %$% n_distinct(patid)
# Creation of column "has atb"
rouen_atb$has_atb <- ifelse(is.na(rouen_atb$molecule), 0, 1)
rouen_atb$has_atb
rouen_atb %>% select(patid,has_atb) %>% filter(has_atb==1) %$% n_distinct(patid)
# ATBs par patient
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n=n()) %>% arrange(desc(n)) %>% print(n=30)
rouen_atb %>% select(patid,molecule) %>% filter(!is.na(molecule)) %>% group_by(patid) %>% summarise(n=n()) %>% arrange(desc(n)) %>% print(n=30)
rouen_atb %>% count(molecule)
rouen_atb$patid %>% pull %>% writeClipboard()
rouen_atb$patid %>% pull %$% writeClipboard()
rouen_atb$patid %$% writeClipboard()
rouen_atb$patid %>% writeClipboard()
has_acvd = read.xlsx("has_acvd.xlsx", sheet = 1)
ifelse(round$patid %in% has_acvd$PATID,1,0)
ifelse(rouen$patid %in% has_acvd$PATID,1,0)
rouen
rouen$acvd = ifelse(rouen$patid %in% has_acvd$PATID,1,0)
66/467
x = read.xlsx("all_prescriptions.xlsx", sheet = 2)
x
x %>% tibble
library(stringr)
str_detect(x$PRESLABEL,"ene$")
str_detect(x$PRESLABEL,"ene11b")
str_detect(x$PRESLABEL,"ene\\b")
str_detect(x$PRESLABEL,"ene\\b") %>% table
qare
qare <- read.xlsx("care_plateforme.xlsx", sheet = 1)
qare <- qare %>%
select(-c(
ticked_cardio_vascular_family, ticked_asthma, ticked_stress, ticked_psycho, ticked_neuroleptics,
ticked_bcg, ticked_diphtheria_polio, ticked_tetanus, ticked_pertussis, ticked_haemophilus,
ticked_hepatitis_b, ticked_pneumococcus, ticked_meningitis_c, ticked_mmr, ticked_hpv, ticked_influenza,
ticked_zona, ticked_food, ticked_diet, ticked_alcohol, ticked_cigarettes, ticked_exercise
)) %>%
mutate(
consultation_id = as.numeric(as.factor(consultation_id)),
patient_id = as.numeric(as.factor(patient_id)),
physician_id = as.numeric(as.factor(physician_id))
)
qare %>% select(physician_id, consultation_id) %>% distinct() %>% count(physician_id)
qare %>% select(physician_id, consultation_id, speciality) %>% distinct() %>% count(spec_image())
qare %>% select(physician_id, consultation_id, speciality) %>% distinct() %>% count(speciality)
# filtering out the pervasive dentist
qare = qare %>% filter(physician_id!=39)
qare %>% select(physician_id, consultation_id, speciality) %>% distinct() %>% count(speciality)
n_distinct(qare$physician_id)
qare %>%
count(physician_gender) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>% select(physician_id,physician_gender) %>%
distinct() %>%
count(physician_gender) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>% select(consultation_id,speciality) %>%
distinct() %>%
count(speciality) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>%
count(speciality) %>%
arrange(desc(n)) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
kable() %>%
kable_minimal()
qare %>% select(consultation_id,speciality) %>%
distinct() %>%
count(speciality) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>% select(consultation_id,speciality) %>%
distinct() %>%
count(speciality) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>% select(physician_id,physician_gender) %>%
distinct() %>%
count(physician_gender) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>% select(physician_id,speciality) %>%
distinct() %>%
count(speciality) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable() %>%
kable_minimal()
qare %>%
count(speciality) %>%
arrange(desc(n)) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
kable(caption = "Repartition volume activité") %>%
kable_minimal()
qare %>% select(physician_id,speciality) %>%
distinct() %>%
count(speciality) %>%
mutate("%" = round(proportions(n) * 100, 2)) %>%
slice(-3) %>%
kable(caption = "Repartition specialistes") %>%
kable_minimal()
